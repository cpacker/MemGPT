"""agent pydantic and sql models align

Revision ID: 0f88ad62279d
Revises: 80b6686ed43f
Create Date: 2024-08-26 19:10:54.469690

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "0f88ad62279d"
down_revision: Union[str, None] = "80b6686ed43f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("agent", sa.Column("system", sa.String(), nullable=True))
    op.alter_column("agent", "metadata_", existing_type=postgresql.JSON(), nullable=True)
    op.alter_column("agent", "llm_config", existing_type=postgresql.JSON(), nullable=True)
    op.alter_column("agent", "embedding_config", existing_type=postgresql.JSON(), nullable=True)
    op.drop_column("agent", "persona")
    op.drop_column("agent", "state")
    op.drop_column("agent", "preset")
    op.drop_column("agent", "human")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("agent", sa.Column("human", sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column("agent", sa.Column("preset", sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column("agent", sa.Column("state", postgresql.JSON(), autoincrement=False, nullable=False))
    op.add_column("agent", sa.Column("persona", sa.VARCHAR(), autoincrement=False, nullable=False))
    op.alter_column("agent", "embedding_config", existing_type=postgresql.JSON(), nullable=False)
    op.alter_column("agent", "llm_config", existing_type=postgresql.JSON(), nullable=False)
    op.alter_column("agent", "metadata_", existing_type=postgresql.JSON(), nullable=False)
    op.drop_column("agent", "system")
    # ### end Alembic commands ###
