"""init-again

Revision ID: c7a2a7571b96
Revises:
Create Date: 2024-10-11 10:17:04.144821

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "c7a2a7571b96"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "tokens",
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("key", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="tokens_pkey"),
    )
    op.create_index("tokens_idx_user", "tokens", ["user_id"], unique=False)
    op.create_index("tokens_idx_key", "tokens", ["key"], unique=False)
    op.create_table(
        "tools",
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("source_type", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("source_code", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("json_schema", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("module", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("tags", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="tools_pkey"),
    )
    op.create_table(
        "block",
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("value", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("limit", sa.BIGINT(), autoincrement=False, nullable=True),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("template", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("label", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("metadata_", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="block_pkey"),
    )
    op.create_index("block_idx_user", "block", ["user_id"], unique=False)
    op.create_table(
        "users",
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("org_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("policies_accepted", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="users_pkey"),
    )
    op.create_table(
        "jobs",
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("status", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(timezone=True), server_default=sa.text("now()"), autoincrement=False, nullable=True),
        sa.Column("completed_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.Column("metadata_", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="jobs_pkey"),
    )
    op.create_table(
        "sources",
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(timezone=True), server_default=sa.text("now()"), autoincrement=False, nullable=True),
        sa.Column("embedding_config", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("metadata_", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="sources_pkey"),
    )
    op.create_index("sources_idx_user", "sources", ["user_id"], unique=False)
    op.create_table(
        "agents",
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(timezone=True), server_default=sa.text("now()"), autoincrement=False, nullable=True),
        sa.Column("description", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("message_ids", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("memory", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("system", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("tools", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("agent_type", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("llm_config", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("embedding_config", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("metadata_", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="agents_pkey"),
    )
    op.create_index("agents_idx_user", "agents", ["user_id"], unique=False)
    op.create_table(
        "agent_source_mapping",
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("agent_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("source_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="agent_source_mapping_pkey"),
    )
    op.create_index("agent_source_mapping_idx_user", "agent_source_mapping", ["user_id", "agent_id", "source_id"], unique=False)
    op.create_table(
        "organizations",
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="organizations_pkey"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    pass
