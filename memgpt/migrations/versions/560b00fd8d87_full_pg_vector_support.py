"""full PG vector support

Revision ID: 560b00fd8d87
Revises: 496c691962ef
Create Date: 2024-08-26 15:07:28.171897

"""

from typing import Sequence, Union

from pgvector.sqlalchemy import Vector
from sqlalchemy.dialects import postgresql

from alembic import op
from memgpt.constants import MAX_EMBEDDING_DIM

# revision identifiers, used by Alembic.
revision: str = "560b00fd8d87"
down_revision: Union[str, None] = "496c691962ef"
revision: str = "560b00fd8d87"
down_revision: Union[str, None] = "496c691962ef"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


# how to convert the existing JSON column to a PGVector column
# https://github.com/pgvector/pgvector/issues/380#issuecomment-1858844472
def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "passage",
        "embedding",
        existing_type=postgresql.JSON(),
        type_=Vector(dim=MAX_EMBEDDING_DIM),
        existing_nullable=True,
        postgresql_using=f"embedding::json::text::vector({MAX_EMBEDDING_DIM})",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "passage",
        "embedding",
        existing_type=Vector(dim=MAX_EMBEDDING_DIM),
        type_=postgresql.JSON(),
        existing_nullable=True,
        postgresql_using=f"embedding::vector({MAX_EMBEDDING_DIM})::text::json",
    )
    # ### end Alembic commands ###
